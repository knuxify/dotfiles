#!/bin/bash
#-------------------------------#
#      knuxify's bashrc         #
#      rev. B                   #
#-------------------------------#

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

diary_dir=~/.local/diary

#export lsuses=20

#ls() {
#	export lsuses=$(($lsuses-1))
#	if [[ $lsuses -gt 0 ]]; then
#		echo "$lsuses uses remaining."
#		/usr/bin/ls $*
#	else
#		echo "bash: ls: command not found"
#	fi
#}

alias grep='grep --colour=auto'
alias rb="source ~/.bashrc"
alias ls="ls -sh --color"
alias als="ls -shA --color"

commitpkgs() {
	git reset origin/master
	for pkg in $*; do
		source $pkg/APKBUILD;
		git add $pkg;
		git commit -m "testing/$pkg: new aport
 
$url
$pkgdesc";
	done
	git push --force
}

[[ -e ~/.gittoken ]] && source ~/.gittoken

# Add local bin folder to path.
export PATH=$PATH:~/.bin:~/.local/bin

xhost +local:root > /dev/null 2>&1
complete -cf sudo
shopt -s checkwinsize; shopt -s expand_aliases; shopt -s histappend

# Some useful variables
gh="https://github.com"
export EDITOR=nano

masochist-mode() {
	# masochist-mode - set up cm building environment
	echo -e "\e[1;31mYou promised to not do that anymore.\e[0m Don't let me down."
	#return 1
	[[ "$1" ]] || {
		echo "no directory specified!"
		return 1
	}
	echo "Are you sure you want to waste the next ~24 hours? [Y/n] Y"
	cd ~/lineage/"$1"
	source ~/lineage/android/venv/bin/activate
	source build/envsetup.sh
	export JAVA_HOME=/usr/lib/jvm/java-7-openjdk
	echo -e "\e[1;31mMASOCHIST MODE\e[0m enabled."
}

# proj - create a project or cd into one
# usage: proj [project name or git link]
proj() {
	[[ ! -e "$HOME/projects" ]] && mkdir "$HOME/projects"
	if [ -e "$HOME/projects/$*" ]; then
		cd "$HOME/projects/$*"
	else
		projectnolink="${*/.git/}"; projectnolink="${projectnolink##*/}"
		read -p "$projectnolink does not exist. Press any button to create." -ren1
		if [[ "$*" = "https://github.com"* ]] || [[ "$*" = "https://gitlab.com"* ]] || [[ "$*" = *".git" ]]; then
    		cd $HOME/projects; git clone $*; cd "$projectnolink"
		else
    		cd $HOME/projects; mkdir $*; cd $*
		fi
	fi
}

# today-i - daily activity logger
# usage: today-i
today-i() {
	date=$(date +%Y-%m-%d)
	[[ ! -e $diary_dir ]] && mkdir $diary_dir
	date +%H:%M >> $diary_dir/$date
	if [[ $* ]]; then
		echo "$*" >> $diary_dir/$date
	else
		nano $diary_dir/$date
	fi
}
yesterday-i() {
	[[ ! -e $diary_dir ]] && mkdir $diary_dir
	date --date="yesterday" +%H:%M >> $diary_dir/$(date --date="yesterday" +%Y-%m-%d)
	nano $diary_dir/$(date --date="yesterday" +%Y-%m-%d)
	#echo "$*" >> $diary_dir/$(date --date="yesterday" +%Y-%m-%d)
}

# Get software. Aliased to shoppe, making it work out of the box on every supported system.
alias pget="shoppe install --noconfirm"
alias prem="shoppe remove --noconfirm"

alias tilde="mosh -ssh 'ssh -i ~/.ssh/tilde.town' knuxify@tilde.town"

hack() {
	unset huser
	[[ $2 ]] && huser="$2""@"
	case $1 in
		hc1|susie|104) ssh ${huser}192.168.1.104;;
		satellite|mc|lancer|114) ssh ${huser}192.168.1.111;;
		pi|muffet) ssh ${huser}192.168.1.103;;
		#tunnel|vps) mosh ${huser}user2.polaron.srv.jortage.com;;
		tunnel) ssh -p 420 ${huser}user2.polaron.srv.jortage.com;;
	esac
}

alias touchtoggle="xinput set-prop 'AlpsPS/2 ALPS GlidePoint' 315 $1"

PS1="\W \[\e[0m\]> \[$(tput sgr0)\]"

todoshuffler() {
	highlight="\e[1;3$(( ( RANDOM % 6 ) + 1 ))m"
	todoitem="#"
	until [[ $todoitem != "#"* ]]; do
		todoitem=$(shuf -n 1 ~/TODO)
	done
	todoitem=${todoitem:2}
	echo -e "If you're looking for something to do, why not ${highlight}${todoitem}\e[0m?"
}

echo -e "hi \e[1;32m$USER""@$(hostname)\e[0m! it is currently $(date +%H:%M)"
if [[ -e ~/TODO ]] && [[ -s ~/TODO ]]; then
	todoshuffler
#	figlet "todo:"
#	while IFS="" read -r line || [[ -n "$line" ]]; do [[ "$line" != "#"* ]] && echo "$line"; done < ~/TODO
fi
#echo -e "\e[0mdon't forget to run \e[31mtoday-i\e[0m when you're done with a task!\n"
export PATH="$PATH:/home/knuxify/.gem/ruby/2.7.0/bin"

sng() {
	sngtmp="$PWD"
	mkdir -p /tmp/sng
	cd /tmp/sng
	youtube-dl -x --audio-format=mp3 --add-metadata --embed-thumbnail "$*"
	cp * "$sngtmp"
	cd "$sngtmp"
	rm -rf /tmp/sng
	unset sngtmp
}

brightness_up() {
	change=5
	[[ $1 ]] && change=$1
	brightness=$(cat /sys/class/backlight/intel_backlight/brightness)
	let $brightness+$change
	echo "$brightness" > /sys/class/backlight/intel_backlight/brightness
}

brightness_down() {
	change=5
	[[ $1 ]] && change=$1
	brightness=$(cat /sys/class/backlight/intel_backlight/brightness)
	let $brightness-$change
	echo "$brightness" > /sys/class/backlight/intel_backlight/brightness
}

brighness_set() {
	echo "$1" > /sys/class/backlight/intel_backlight/brightness
}

if [[ ! -e $diary_dir/$(date --date="yesterday" +%Y-%m-%d) ]]; then
	echo -e "\e[1;31mYou did not make a diary entry yesterday!\e[0m Please run \e[1;32myesterday-i\e[0m."
fi

if [[ ! -e $diary_dir/$(date +%Y-%m-%d) ]] && [[ $(date +%H) > 17 ]]; then
	echo -e "\e[1;31mYou did not make a diary entry today!\e[0m Please run \e[1;32mtoday-i\e[0m."
fi
