#!/bin/bash
#-------------------------------#
#      knuxify's bashrc         #
#      rev. B                   #
#-------------------------------#

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

export GPG_TTY=$(tty)

alias grep='grep --colour=auto'
alias rb="source ~/.bashrc"
alias ls="ls -sh --color"
alias als="ls -shA --color"

commitpkgs() {
	git reset origin/master
	for pkg in $*; do
		source $pkg/APKBUILD;
		git add $pkg;
		git commit -m "testing/$pkg: new aport
 
$url
$pkgdesc";
	done
	git push --force
}

[[ -e ~/.gittoken ]] && source ~/.gittoken

# Add local bin folder to path.
export PATH=$PATH:~/.bin:~/.local/bin

xhost +local:root > /dev/null 2>&1
complete -cf sudo
shopt -s checkwinsize; shopt -s expand_aliases; shopt -s histappend

# Some useful variables
export EDITOR=nano

masochist-mode() {
	# masochist-mode - set up cm building environment
	echo -e "\e[1;31mYou promised to not do that anymore.\e[0m Don't let me down."
	#return 1
	[[ "$1" ]] || {
		echo "no directory specified!"
		return 1
	}
	echo "Are you sure you want to waste the next ~24 hours? [Y/n] Y"
	cd ~/lineage/"$1"
	source ~/lineage/android/venv/bin/activate
	source build/envsetup.sh
	export JAVA_HOME=/usr/lib/jvm/java-7-openjdk
	echo -e "\e[1;31mMASOCHIST MODE\e[0m enabled."
}

# proj - create a project or cd into one
# usage: proj [project name or git link]
proj() {
	[[ ! -e "$HOME/projects" ]] && mkdir "$HOME/projects"
	if [ -e "$HOME/projects/$*" ]; then
		cd "$HOME/projects/$*"
	else
		projectnolink="${*/.git/}"; projectnolink="${projectnolink##*/}"
		read -p "$projectnolink does not exist. Press any button to create." -ren1
		if [[ "$*" = "https://github.com"* ]] || [[ "$*" = "https://gitlab.com"* ]] || [[ "$*" = *".git" ]]; then
    		cd $HOME/projects; git clone $*; cd "$projectnolink"
		else
    		cd $HOME/projects; mkdir $*; cd $*
		fi
	fi
}

# today-i - daily activity logger
# usage: today-i
today-i() {
	date=$(date +%Y-%m-%d)
	[[ ! -e $diary_dir ]] && mkdir $diary_dir
	date +%H:%M >> $diary_dir/$date
	if [[ $* ]]; then
		echo "$*" >> $diary_dir/$date
	else
		nano $diary_dir/$date
	fi
}
yesterday-i() {
	[[ ! -e $diary_dir ]] && mkdir $diary_dir
	date --date="yesterday" +%H:%M >> $diary_dir/$(date --date="yesterday" +%Y-%m-%d)
	nano $diary_dir/$(date --date="yesterday" +%Y-%m-%d)
	#echo "$*" >> $diary_dir/$(date --date="yesterday" +%Y-%m-%d)
}

alias tilde="mosh -ssh 'ssh -i ~/.ssh/tilde.town' knuxify@tilde.town"

hack() {
	unset huser
	[[ $2 ]] && huser="$2""@"
	case $1 in
		hc1|susie|104) ssh ${huser}192.168.1.104;;
		satellite|mc|lancer|114) ssh ${huser}192.168.1.111;;
		pi|muffet) ssh ${huser}192.168.1.103;;
		tunnel) ssh -p 420 ${huser}user2.polaron.srv.jortage.com;;
	esac
}

alias touchtoggle="xinput set-prop 'AlpsPS/2 ALPS GlidePoint' 315 $1"

PS1="\W \[\e[0m\]> \[$(tput sgr0)\]"

sng() {
	sngtmp="$PWD"
	mkdir -p /tmp/sng
	cd /tmp/sng
	youtube-dl -x --audio-format=mp3 --add-metadata --embed-thumbnail "$*"
	cp * "$sngtmp"
	cd "$sngtmp"
	rm -rf /tmp/sng
	unset sngtmp
}

alias "pesky=sudo rc-service postgresql start"

# get current branch in git repo
function parse_git_branch() {
	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ ! "${BRANCH}" == "" ]
	then
		echo "[${BRANCH}] "
	else
		echo ""
	fi
}

export PS1="\[\e[1;37m\]\`parse_git_branch\`\[\e[0m\]\W \[\e[1;33m\]>>\[\e[0m\] "

newbranch() {
	git pull origin
	git checkout origin
	git checkout -b $1
}
