#!/usr/bin/env bash

# knuxify's herbst config
# version 2

#PATH="$HOME/.bin:$PATH"

echo "A"

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# Pretend this is my .xinit.
# I'm putting this here because Void is a fuck.
#[[ -z "$DBUS_SESSION_BUS_ADDRESS" ]] &&  hc spawn `dbus-launch --sh-syntax --exit-with-session`

xsetroot -solid '#5A8E3A'

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-q close
hc keybind $Mod-Shift-r reload

hc keybind $Mod-Left  shift left
hc keybind $Mod-Down  shift down
hc keybind $Mod-Up    shift up
hc keybind $Mod-Right shift right

hc keybind Alt-Tab         cycle_all +1
hc keybind Alt-Shift-Tab   cycle_all -1

hc keybind $Mod-t floating toggle

hc keybind $Mod-l split right 0.50
hc keybind $Mod-k split bottom 0.95
hc keybind $Mod-j split left 0.50
hc keybind $Mod-i split top 0.95
hc keybind $Mod-e remove

resizestep=0.01
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

hc keybind Shift-Print spawn ~/.bin/screengun /home/knuxify/pictures/screenshots
hc keybind Print spawn ~/.bin/screengun /home/knuxify/pictures/screenshots fullscreen

hc keybind $Mod-Shift-p spawn /home/knuxify/.bin/reloadbar

hc keybind $Mod-c spawn ~/.bin/borderswitcher

hc keybind $Mod-r spawn rofi -show drun

# obligarory music control bindings
hc keybind XF86AudioRaiseVolume spawn pactl -- set-sink-volume @DEFAULT_SINK@ +5%
hc keybind XF86AudioLowerVolume spawn pactl -- set-sink-volume @DEFAULT_SINK@ -5%
hc keybind XF86AudioMute spawn pactl -- set-sink-mute @DEFAULT_SINK@ toggle

# Keybinds for Spotify:
hc keybind XF86AudioPlay spawn dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause
hc keybind XF86AudioPause spawn dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause
hc keybind XF86AudioNext spawn dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next
hc keybind XF86AudioPrev spawn dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous

# tags
tag_names=( {1..4} )
tag_keys=( {1..4} 0 )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
#hc keybind $Mod-s floating toggle
#hc keybind $Mod-f fullscreen toggle
#hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1

hc attr theme.border_width 4
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 4

hc set frame_padding 0
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 0
hc set mouse_recenter_gap 0

hc set frame_border_width 0
hc set always_show_frame 0
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
#hc set frame_gap 0

bg1="#282828"
bg2="#928374"
hc attr theme.active.color "$bg2"
hc attr theme.normal.color "$bg1"
hc attr theme.urgent.color orange
hc attr theme.floating.outer_color "$bg1"
hc attr theme.active.inner_color "$bg2"
hc attr theme.active.outer_color "$bg2"
hc attr theme.background_color "#333333"

#hc set window_gap 5

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# Autostart
hc spawn killall polybar
hc spawn killall picom
hc spawn killall batterymonitor
hc spawn /home/knuxify/.bin/batterymonitor
hc spawn polybar bottom
hc spawn picom
hc spawn nitrogen --restore
hc spawn jgmenu-gen
systemctl start --user dunst
setxkbmap pl

# Monitor setup
export DISPLAY=:0
if [[ "$(xrandr | grep ' connected' | wc -l)" > 1 ]]; then
	for i in $(xrandr | grep ' connected' | sed 's/\s.*$//'); do
		[[ "$i" = "eDP-1" ]] || xrandr --output $i --auto
	done
	xrandr --output eDP-1 --off
else
	xrandr --output eDP-1 --auto
fi

hc detect_monitors

# padding
~/.bin/borderswitcher
hc set window_gap 2
